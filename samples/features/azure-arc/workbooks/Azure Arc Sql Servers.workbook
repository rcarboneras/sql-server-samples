{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "# Azure Arc SQL Server Instances"
      },
      "name": "text - 2"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "5ccbaa77-2a42-4a07-a877-b5a3a6297703",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "includeAll": true,
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "value": [
              "value::all"
            ]
          },
          {
            "id": "43934901-a569-47a2-ab4e-116d2293204c",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceGroup",
            "label": "Resource Group",
            "type": 2,
            "isRequired": true,
            "isGlobal": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Resources\r\n| summarize Count = count() by subscriptionId, resourceGroup\r\n| order by Count desc\r\n| extend Rank = row_number()\r\n| project label = resourceGroup",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "4b0fd3d8-de3e-41b8-88d9-7e704404ad6b",
            "version": "KqlParameterItem/1.0",
            "name": "ServerName",
            "label": "Server Name Filter",
            "type": 1,
            "value": ""
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "SQLInstance",
            "type": 1,
            "value": "",
            "id": "2df50306-76d2-4686-abaf-78f57430e75a"
          },
          {
            "id": "1f421bee-162d-463e-b591-fdaaf93d6dfd",
            "version": "KqlParameterItem/1.0",
            "name": "Help",
            "type": 2,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n { \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }\r\n]\r\n"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "parameters - 7"
    },
    {
      "type": 1,
      "content": {
        "json": "## Release Notes\r\n| Key       | Value                                \t\t                |\r\n|-------------------|---------------------------------------------------------------|\r\n| `Version`\t\t\t| 1.2\t\t  |\r\n"
      },
      "conditionalVisibility": {
        "parameterName": "Help",
        "comparison": "isEqualTo",
        "value": "Yes"
      },
      "name": "ReleaseNotes"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ 'microsoft.hybridcompute/machines'\r\n| where resourceGroup in ({ResourceGroup})\r\n| where properties.detectedProperties.mssqldiscovered == \"true\"\r\n| count\r\n| extend Tittle=\"Number of Azure Arc SQL Servers:\"",
        "size": 4,
        "title": " ",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Tittle",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "palette": "redGreen"
            }
          },
          "showBorder": true,
          "size": "auto"
        }
      },
      "customWidth": "25",
      "name": "query - 8"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ \"Microsoft.AzureArcData/sqlServerInstances\"\r\n| where resourceGroup in ({ResourceGroup})\r\n| count\r\n| extend Tittle=\"Number of Azure Arc SQL Instances:\"",
        "size": 4,
        "title": " ",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Tittle",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "min": 0,
              "palette": "green"
            }
          },
          "showBorder": true,
          "size": "auto"
        }
      },
      "customWidth": "25",
      "name": "Instances"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ \"Microsoft.AzureArcData/sqlServerInstances\"\r\n| extend vCore = toint(properties.vCore)\r\n| extend edition = tostring(properties.edition)\r\n| extend Title = case(edition == \"Developer\", \"Developer\", \r\n                       edition == \"Standard\", \"Standard\", \r\n                       edition == \"Enterprise\", \"Enterprise\", \r\n                       \"Express\")\r\n| summarize sum(vCore) by Title,edition\r\n",
        "size": 4,
        "title": "Virtual Cores by Edition",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Title",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "sum_vCore",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            }
          },
          "showBorder": true,
          "size": "auto"
        }
      },
      "customWidth": "50",
      "name": "Virtual Cores by Edition"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ \"Microsoft.AzureArcData/sqlServerInstances\"\r\n| where resourceGroup in ({ResourceGroup})\r\n| extend SQLInstance = id, AzureArcServer = strcat(\"/\",tostring(properties.containerResourceId))\r\n| where SQLInstance like \"{SQLInstance}\"\r\n| where AzureArcServer like \"{ServerName}\"\r\n| extend version = tostring(properties.version)\r\n| summarize count() by tostring(version)\r\n| sort by version",
        "size": 3,
        "title": "SQL Versions",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "piechart"
      },
      "customWidth": "25",
      "name": "query - 4"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ \"Microsoft.AzureArcData/sqlServerInstances\"\r\n| where resourceGroup in ({ResourceGroup})\r\n| extend SQLInstance = id, AzureArcServer = strcat(\"/\",tostring(properties.containerResourceId))\r\n| where SQLInstance like \"{SQLInstance}\"\r\n| where AzureArcServer like \"{ServerName}\"\r\n| extend edition = tostring(properties.edition)\r\n| summarize count() by tostring(edition)\r\n| sort by edition",
        "size": 3,
        "title": "SQL Editions",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "piechart",
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Protected",
              "color": "green"
            },
            {
              "seriesName": "Unknown",
              "color": "gray"
            },
            {
              "seriesName": "Not Protected",
              "color": "redBright"
            }
          ]
        }
      },
      "customWidth": "25",
      "name": "query - 4 - Copy - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ \"Microsoft.AzureArcData/sqlServerInstances\"\r\n| where resourceGroup in ({ResourceGroup})\r\n| extend SQLInstance = id, AzureArcServer = tolower(properties.containerResourceId)\r\n| where SQLInstance like \"{SQLInstance}\"\r\n| where AzureArcServer like \"{ServerName}\"\r\n| join (resources\r\n| where type == 'microsoft.hybridcompute/machines/extensions' \r\n| where properties.type == \"WindowsAgent.SqlServer\"\r\n| extend License = case(properties.settings.LicenseType == \"Paid\",\"SA\",properties.settings.LicenseType == \"PAYG\",\"PAYG\",\"unset\")\r\n| extend Serverid = tolower(tostring(split(id,'/extensions/WindowsAgent.SqlServer')[0]))) on $left.AzureArcServer == $right.Serverid\r\n| summarize count() by tostring(License)\r\n| sort by License",
        "size": 3,
        "title": "Servers LicenseType",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "piechart",
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "SA",
              "label": "Soft. Assurance",
              "color": "green"
            },
            {
              "seriesName": "unset",
              "color": "gray"
            },
            {
              "seriesName": "PAYG",
              "label": "Pay as you Go"
            }
          ]
        }
      },
      "customWidth": "25",
      "name": "query - 4 - Copy - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ \"Microsoft.AzureArcData/sqlServerInstances\"\r\n| where resourceGroup in ({ResourceGroup})\r\n| extend SQLInstance = id, AzureArcServer = strcat(\"/\",tostring(properties.containerResourceId))\r\n| where SQLInstance like \"{SQLInstance}\"\r\n| where AzureArcServer like \"{ServerName}\"\r\n| extend azureDefenderStatus = tostring(properties.azureDefenderStatus)\r\n| summarize count() by tostring(azureDefenderStatus)\r\n| sort by azureDefenderStatus",
        "size": 3,
        "title": "Azure Defender Status",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "piechart",
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Protected",
              "color": "green"
            },
            {
              "seriesName": "Unknown",
              "color": "gray"
            },
            {
              "seriesName": "Not Protected",
              "color": "redBright"
            }
          ]
        }
      },
      "customWidth": "25",
      "name": "query - 4 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ \"Microsoft.AzureArcData/sqlServerInstances\"\r\n| extend SQLInstance = id, AzureArcServer = tolower(tostring(properties.containerResourceId))\r\n| where SQLInstance like \"{SQLInstance}\"\r\n| where resourceGroup in ({ResourceGroup})\r\n| where AzureArcServer like \"{ServerName}\"\r\n| extend createdAt = format_datetime(todatetime(systemData.createdAt), 'yyyy-MM-dd hh:mm:ss')\r\n| extend resourceGroup = split(['id'],\"/providers\")[0]\r\n| extend version = tostring(properties.version)\r\n| extend edition = tostring(properties.edition)\r\n| extend Build = tostring(properties.currentVersion)\r\n| extend DefenderStatus = tostring(properties.azureDefenderStatus)\r\n| extend patchLevel = tostring(properties.patchLevel)\r\n| extend vcores = toint(properties.vCore)\r\n| join (resources\r\n| where type == 'microsoft.hybridcompute/machines/extensions' \r\n| where properties.type == \"WindowsAgent.SqlServer\"\r\n| order by ['id'] asc\r\n| extend License = case(properties.settings.LicenseType == \"Paid\",\"SA\",properties.settings.LicenseType == \"PAYG\",\"PAYG\",\"unset\")\r\n| extend Serverid = tolower(tostring(split(id,'/extensions/WindowsAgent.SqlServer')[0]))\r\n| parse properties with * 'uploadStatus : ' DPSStatus ';' *) on $left.AzureArcServer == $right.Serverid\r\n| join (resources\r\n| where type == \"microsoft.hybridcompute/machines\"\r\n| extend status = tostring(properties.status)\r\n| project id = tolower(id),status) on $left.AzureArcServer == $right.id\r\n| project subscriptionId,status,AzureArcServer,SQLInstance,resourceGroup,version,Build,patchLevel,edition,vcores,License,DPSStatus,DefenderStatus\r\n",
        "size": 3,
        "showAnalytics": true,
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "subscriptionId",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true,
                "customColumnWidthSetting": "26.5714ch"
              }
            },
            {
              "columnMatch": "status",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Expired",
                    "representation": "4"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Disconnected",
                    "representation": "Disconnect",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "15.5ch"
              }
            },
            {
              "columnMatch": "AzureArcServer",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "20.1429ch"
              }
            },
            {
              "columnMatch": "SQLInstance",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "23.4286ch"
              }
            },
            {
              "columnMatch": "resourceGroup",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true,
                "customColumnWidthSetting": "20.7143ch"
              }
            },
            {
              "columnMatch": "version",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "17.2857ch"
              }
            },
            {
              "columnMatch": "Build",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "13.7143ch"
              }
            },
            {
              "columnMatch": "patchLevel",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "14.4286ch"
              }
            },
            {
              "columnMatch": "edition",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "11.4286ch"
              }
            },
            {
              "columnMatch": "vcores",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "11ch"
              }
            },
            {
              "columnMatch": "License",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "unset",
                    "representation": "dot-gray",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "11.7143ch"
              }
            },
            {
              "columnMatch": "DPSStatus",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "!=",
                    "thresholdValue": "OK",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "12.4286ch"
              }
            },
            {
              "columnMatch": "azureDefenderStatus",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "25ch"
              }
            },
            {
              "columnMatch": "createdAt",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "21.1429ch"
              }
            },
            {
              "columnMatch": "currentVersion",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "licenseType",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "14.4286ch"
              }
            }
          ],
          "rowLimit": 500,
          "filter": true
        },
        "sortBy": []
      },
      "name": "query - 1"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where type =~ \"microsoft.hybridcompute/machines\"\r\n| where name like \"{ServerName}\"\r\n| where resourceGroup in ({ResourceGroup})\r\n| where properties.mssqlDiscovered == true\r\n| extend id = tolower(id)\r\n| join kind=leftouter (resources\r\n| where type =~ \"microsoft.hybridcompute/machines/extensions\"\r\n| where properties.type in (\"WindowsAgent.SqlServer\", \"AzureMonitorWindowsAgent\")\r\n| extend ArcServerResourceId = tolower(tostring(split(id, \"/extensions\")[0]))\r\n| project ArcServerResourceId, ExtensionType = tostring(properties.type), ExtensionState = tostring(properties.provisioningState)\r\n| summarize SqlExtensionInstalled = countif(ExtensionType == \"WindowsAgent.SqlServer\" and ExtensionState == \"Succeeded\"), AMAExtensionInstalled = countif(ExtensionType == \"AzureMonitorWindowsAgent\" and ExtensionState == \"Succeeded\") by ArcServerResourceId)\r\non $left.id == $right.ArcServerResourceId\r\n| join kind=leftouter (resources\r\n| where type =~ \"microsoft.azurearcdata/sqlserverinstances\"\r\n| project ArcServerId = tolower(tostring(properties.containerResourceId)), SqlServerId = id, InstanceName = properties.instanceName, Version = properties.version\r\n| summarize ArcSqlServerInstances = make_list(split(SqlServerId, \"/\")[8]), NumberofInstances = count() by ArcServerId)\r\non $left.id == $right.ArcServerId\r\n| project ArcServer = id, SqlExtensionInstalled = (SqlExtensionInstalled==1), AMAExtensionInstalled = (AMAExtensionInstalled == 1), NumberofInstances, ArcSqlServerInstances\r\n",
        "size": 0,
        "title": "Extensions and Instances per server",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "SqlExtensionInstalled",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "0",
                    "representation": "Important",
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": ""
                  }
                ]
              }
            },
            {
              "columnMatch": "AMAExtensionInstalled",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "0",
                    "representation": "2",
                    "text": ""
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": ""
                  }
                ]
              }
            }
          ],
          "rowLimit": 500,
          "filter": true,
          "sortBy": [
            {
              "itemKey": "$gen_thresholds_AMAExtensionInstalled_2",
              "sortOrder": 1
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "$gen_thresholds_AMAExtensionInstalled_2",
            "sortOrder": 1
          }
        ]
      },
      "name": "query - 0"
    }
  ],
  "fallbackResourceIds": [
    "azure monitor"
  ],
  "fromTemplateId": "sentinel-UserWorkbook",
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}